---
title: "Assignment - 3: Task 2"
author: "Meet Muchhala"
format: 
  html:
    code-fold: true
    toc: true
    embed-resources: true
editor: visual
theme: sandstone
execute: 
  echo: true
  message: false
  warning: false
---

# NLS Modelling for Crop Biomass Data

![](/Users/meetmuchhala/Desktop/Winter%202024/ESM%20244/Assignment-3/image.png) Source: Texas A & M

## Overview

### Dataset Description:

The dataset used in this analysis contains experimental growth data for three grains (sorghum, maize, and millet) in Greece. It is sourced from the study by Archontoulis, S.V. and Miguez, F.E. (2015) and is accessible through the nlraa package in R.

### Purpose of Analysis:

The goal of this analysis is to use non-linear least squares (NLS) regression to predict crop yields based on experimental growth data and assess the response of the grains to fertilizer. We will choose the Beta function from Table 1 Equation 2.5 of Archontoulis and Miguez (2015) as our model for NLS regression.The dataset consists of experimental growth data for three grains (sorghum, maize, and millet) in Greece. The variables included are as follows:

<details>

<summary>Show Table</summary>

```{r}

#|echo = FALSE

dataset_description <- tibble::tribble(
  ~Variable, ~Description,
  "doy", "Day of the year",
  "block", "Experimental block number",
  "input", "Fertilizer input level (1 = low, 2 = high)",
  "crop", "Type of crop (F = Faba bean, M = Maize, S = Sorghum)",
  "yield", "Biomass yield (Mg/ha)"
)

# Load required package
library(knitr)

# Create a formatted table
kable(dataset_description, caption = "Description of Dataset Variables")
```

</details>

The data is sourced from Archontoulis, S.V. and Miguez, F.E. (2015) and is accessible via the nlraa package.

## Pseudocode Outline

### Data Preparation

-   Load and clean the dataset
-   Visualize biomass over time to identify potential starting parameter values for NLS analysis

### Model Selection

-   Choose the Beta function from Table 1 Equation 2.5 of the paper cited as our NLS model
-   Write a function in R to model the Beta function
-   Create a plot to find potential starting parameter values for NLS analysis NLS Modeling
-   Filter data to keep observations from sorghum fields with high inputs - Run an initial NLS model to predict yield for each day of the year
-   Generate a table showing selected parameter values, standard errors, and p-values of estimated parameters - Graph the fitted model on top of the maize data

### Model Comparison

-   Run NLS models for all combinations of plot, input level, and crop type using purrr
-   Identify the model with the lowest RMSE for each species
-   Show a table of RMSE and chosen parameter values for the best fitted models

### Final Visualization

-   Filter data to block 1 for simplicity and create a plot of actual yield vs modelled yield.
-   Create figures for each input level and join them using patchwork or cowplot
-   Analyze the impact of fertilizer on yield for all three grains

## Setting up the libraries

```{r}
library(tidyverse)
library(Metrics)
library(cowplot)
library(here)
library(nlraa)
library(purrr)
library(kableExtra)
library(broom)

```

## Setting up the datasets

```{r}

#|echo=FALSE 
#|message=FALSE 

## Checking the data and structure of the data
crop_df <- sm %>% 
  janitor::clean_names() 
  
#str(crop_df)

#|echo=FALSE
#|include=FALSE
## Visualizing biomass over time detect guess parameters

plot1 <- ggplot(crop_df, aes(x = doy, y = yield, 
                    shape = crop, fill = crop)) +
  geom_point(size = 1) + 
  labs(x = "Day of the Year", y = "Biomass (Mg/ha)", 
       title = "Biomass Over Time") +
  facet_wrap(~ input, scales = "free_x", ncol = 2) +
  scale_shape_manual(values = c("F" = 24, 
                                "M" = 21, "S" = 21)) +
  scale_fill_manual(values = c("F" = "white", 
                               "M" = "black", "S" = "white")) +
  guides(shape = guide_legend(title = "Crop", 
        override.aes = list(fill = c("white", "black", "white"))),
         fill = FALSE)

```

## Model selection

We choose the Beta function from Table 1 Equation 2.5 of Archontoulis and Miguez (2015) as our model for NLS regression. The function is given as:

y = ymax*(1+(te-t)/(te-tm))*(t/te)\^(te/(te-tm))

-   ymax represents the maximum yield,
-   t represents time (day of the year),
-   te represents the time to inflection,
-   tm represents the time to reach half of the maximum value.

```{r}

#|echo=FALSE
#|message=FALSE 

## Setting up the Beta Function for the model
beta_function <- function(t, ymax, te, tm) {
  y_out <- ymax*(1+(te-t)/(te-tm))*(t/te)^(te/(te-tm))
  return(y_out)
}

#|echo=FALSE
#|include=FALSE
## Testing initial simulation values based on literature and plotting visualizations

beta_simulation <- crop_df %>% 
  mutate(simulated = beta_function(doy, 52, 262, 219))

simulated_mod_plot <- ggplot(beta_simulation, aes(x = doy, y = yield, color = "actual")) +
  geom_point() +
  geom_line(aes(x = doy, y = simulated, color = "simulated model")) +
  scale_color_manual(values = c("actual" = "darkblue", "simulated model" = "yellow2")) +
  theme_minimal()
                        
```

## NLS Modelling Setup and Filtering

We filter the data to keep observations from sorghum fields with high inputs and run an NLS model to predict yield for each day of the year.

```{r}

## Filtering to keep observations from sorghum fields with higher inputs.
sorghum_df <- crop_df %>% 
  filter(crop == "S" & input == "2")

## Setting up initial guesses based on simulated plot assumptions.

ymax_guess <- max(crop_df$yield)
te_guess <- 264
tm_guess <- 219


```

```{r}

#|message = FALSE
nls_sorghum_one = nls(yield ~ beta_function(doy,
                                            ymax,
                                            te,
                                            tm),
                  data = sorghum_df,
                  start = list(ymax = ymax_guess,
                               te = te_guess,
                               tm = tm_guess),
                  trace=FALSE)
```

## Output Parameters of NLS Model

A table showing selected parameter values, standard errors, and p-values of estimated parameters is generated, and the fitted model is graphed on top of the maize data.

```{r}
#| fig-cap: "Table 1: Parameter value estimates, standard errors, t-values and p-values for the NLS model fitted to high-input sweet sorghum biomass data."

kbl(coef(summary(nls_sorghum_one))) 
```

## Fitted Model Maize Crops

The fitted model was graphed all the crops data and further detected that it does not predict maize crops data well. The fitted model on maize data is represented below.

```{r}
#| label: fig-fittedmodel
#| fig-cap: "NLS model outputs from the Beta function, graphed on top of Maize crop biomass observations."

maize_df <- crop_df %>% 
  filter(crop == "M") %>% 
  mutate(input = factor(input))

nls_one_predict<- maize_df %>% 
  mutate(predict = predict(nls_sorghum_one,newdata=.)) 
  

## The model seems to be predicting with lesser error for other two crops but not for maize.

##ggplot() +
##  geom_point(data = crop_df, aes(x = doy,y = yield, color = crop)) +
 # geom_path(data = nls_one_predict, aes(x= doy,y=predict),color='red')

ggplot() +
 geom_point(data = maize_df, aes(x = doy,y = yield, color = input)) +
 geom_path(data = nls_one_predict, aes(x= doy,y=predict),color='black') +
  scale_color_manual(values = c("green4", "tomato3")) +
  labs(x = "Day of the Year", y = "Biomass (mg/ha)", title = "NLS Model 1: Maize Yields - Actual Data vs Predicted Curve") +
  theme_light()

```

There is an absolute reasoning for running separate NLS models considering it does not fit and represent the data of all crops.

## NLS Modelling

Using purrr, we run NLS models for all 24 combinations of plot, input level, and crop type. For each species, we identify the model with the lowest Root Mean Squared Error (RMSE) and present a table of the RMSE and chosen parameter values of the best-fitted models for each species.

```{r}
## Defining function to pass all the NLS model calls

all_beta_function <- function(yields_df){
  
  ymax_guess <- max(yields_df$yield)
  te_guess <- 286
  tm_guess <- 247
  
  nls(
    formula = yield ~ beta_function(doy, ymax, te, tm),
  data = yields_df,
  start = list(ymax = ymax_guess,
               te = te_guess,
               tm = tm_guess))
}




beta_all <- crop_df %>%
  group_by(block, input, crop) %>% 
  nest() %>% 
  mutate(nls_model = map(data, ~ all_beta_function(.x)),
  predictions = map2(nls_model, data, ~predict(.x, newdata = .y)),
  smooth = map(nls_model, ~predict(.x, newdata = list(doy=seq(141,303)))),
  rmse = map2_dbl(predictions, data, ~Metrics::rmse(.x, .y$yield)))


## Picking the best model 
rmse_least <- beta_all %>% 
  group_by(crop) %>% 
  slice_min(order_by = rmse)

```


```{r}
#| label: tbl-rmse
#| tbl-cap: "Parameter value estimates, standard errors, t-values and p-values for the NLS model with the least RMSE value for each crop species."
#| tbl-subcap: 
#|   - "Fiber Sorghum"
#|   - "Maize"
#|   - "Sweet Sorghum"
#| layout-nrow: 3

# F
broom::tidy(rmse_least$nls_model[[1]]) %>% 
  kbl()
# M
broom::tidy(rmse_least$nls_model[[2]]) %>% 
  kbl()
# S
broom::tidy(rmse_least$nls_model[[3]]) %>% 
  kbl()
```

## Model Impact Visualization

We filter the data to block 1 and create a visualization which illustrates the impact of fertilizer on yield for all three grains. The filtering is done for simplification of the visualization

```{r}
#| label: fig-last
#| fig-cap: "Observed crop biomass compared to smoothed model predictions for each crop species and input level for block 1. Colors represent different crop species. Left(1) graph represents low fertilizer input and Right(2) graph represents high fertilizer input."

observed_data <- crop_df %>%
  filter(block == 1)
 

model_smooth_pred <- beta_all %>% 
  filter(block == 1) %>% 
  unnest(cols = c(smooth)) %>% 
  select(crop, smooth) %>% 
  mutate(doy_smooth = seq(141, 303)) %>% 
  filter(!(crop == "M" & doy_smooth > 263)) 

ggplot() +
  geom_point(data = observed_data, aes(x = doy, y = yield, color = crop)) +  # Observed data points
  geom_path(data = model_smooth_pred, aes(x = doy_smooth, y = smooth, color = crop), size = 1) +  # Smoothed model predictions
  scale_color_manual(values = c("F" = "gold3", "M" = "tomato4", "S" = "blue4")) + 
  facet_wrap(~input) +# Color mapping for different crops
  labs(x = "Day of Year", y = "Biomass", title = "Observed Data vs Smoothed Model Predictions") +
  theme_minimal()
```

## Conclusion

Based on the observed data and smoothed model predictions, it is evident that high fertilizer inputs generally lead to higher yields compared to low fertilizer inputs. However, there does not appear to be a substantial difference in yields between fertilizer inputs in the earlier stages of the growth period. This suggests that while high fertilizer inputs may promote greater biomass accumulation overall, the impact may not be significant during the initial phases of plant growth. Further analysis and experimentation may be required to fully understand the dynamics of fertilizer response and its influence on crop yields over time.
